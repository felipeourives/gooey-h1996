local h1996_ui = require 'gooey-h1996.h1996'
local utils = require 'gooey.themes.utils'

function init(self)
	h1996_ui.acquire_input()

	self.counter = 0
	self.list_data = { 'Sherlock', 'Poirot', 'Magnum', 'Miss Marple', 'Morse', 'Columbo' }
	self.tabs = { { id = 'tab1', label = 'Tab 1', content_id = 'content1' }, { id = 'tab2', label = 'Tab 2', content_id = 'content2' } }
end

function on_input(self, action_id, action)

	local group = h1996_ui.group('group1', function()

		h1996_ui.button('button2', 'button_1', action_id, action, function(button)
			if button.long_pressed then
				print('Button was long pressed')
			else
				print('Button was pressed')
			end
		end)

		h1996_ui.button('button1', 'button_1', action_id, action, function(button)
			if button.long_pressed then
				print('Button was long pressed')
			else
				print('Button was pressed')
			end
		end)
		
		h1996_ui.checkbox('checkbox', 'checkbox_1', action_id, action, function(checkbox)
			print('checkbox', checkbox.checked)
		end)

		h1996_ui.radiogroup('radiogroup', action_id, action, function(group_id, action_id, action)
			h1996_ui.radio('radio1', group_id, action_id, action, function(radio)
				print('radio 1', radio.selected)
			end)
			h1996_ui.radio('radio2', group_id, action_id, action, function(radio)
				print('radio 2', radio.selected)
			end)
			h1996_ui.radio('radio3', group_id, action_id, action, function(radio)
				print('radio 3', radio.selected)
			end)
		end)

		h1996_ui.input('input', gui.KEYBOARD_TYPE_DEFAULT, action_id, action, { empty_text = 'EMPTY, MAX 8 CHARS', max_length = 8 })
		h1996_ui.input('input_alphanumeric', gui.KEYBOARD_TYPE_DEFAULT, action_id, action, { empty_text = 'ALPHA NUMERIC CHARS', allowed_characters = '[%a%d%s]', use_marked_text = false})
		
		h1996_ui.dynamic_list('dynamiclist', 'dynamicscrollbar', self.list_data, action_id, action, nil, function(list)
			print('selected item', list.selected_item.index, list.data[list.selected_item.index])
		end)

		h1996_ui.model_tabs('model-head', self.tabs, action_id, action, nil, function(list)
			if list.selected_item then
				print('selected tab', list.selected_item.index, list.data[list.selected_item.index])
			end
		end)

		if gui.is_enabled(gui.get_node('content1')) then
			h1996_ui.button('tab1_button', 'button_1', action_id, action)
			h1996_ui.button('tab1_button1', 'button_1', action_id, action)
			h1996_ui.button('tab1_button2', 'button_1', action_id, action)
		else
			h1996_ui.button('tab2_button', 'button_1', action_id, action)
		end

		h1996_ui.button('add', 'button_1', action_id, action, function(button)
			self.counter = self.counter + 1
			gui.set_text(gui.get_node('number/label'), self.counter)
		end, true)

		h1996_ui.button('sub', 'button_1', action_id, action, function(button)
			self.counter = self.counter - 1
			gui.set_text(gui.get_node('number/label'), self.counter)
		end, true)
	end)

	if action_id == hash('top') and action.released then
		h1996_ui.previous_field()
	end

	if action_id == hash('down') and action.released then
		h1996_ui.next_field()
	end

	if action_id == hash('enter') and action.released then
		h1996_ui.focused_field_enter()
	end

	return group.consumed
end
